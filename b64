-- b64.lua : self-contained Base64 module for Roblox
local b64 = {}
local chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'

function b64.encode(data)
    return ((data:gsub('.', function(x)
        local r,byte='',x:byte()
        for i=8,1,-1 do
            r = r .. (byte % 2^i - byte % 2^(i-1) > 0 and '1' or '0')
        end
        return r
    end)..'0000'):gsub('%d%d%d?%d?%d?%d?', function(bits)
        if #bits < 6 then return '' end
        local c = 0
        for i=1,6 do
            c = c + (bits:sub(i,i) == '1' and 2^(6-i) or 0)
        end
        return chars:sub(c+1,c+1)
    end) .. ({ '', '==', '=' })[#data%3+1])
end

function b64.decode(data)
    data = data:gsub('[^'..chars..'=]', '')
    return (data:gsub('.', function(x)
        if x == '=' then return '' end
        local r,f='',(chars:find(x)-1)
        for i=6,1,-1 do
            r = r .. (f % 2^i - f % 2^(i-1) > 0 and '1' or '0')
        end
        return r
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?%d?', function(bits)
        if #bits ~= 8 then return '' end
        local c = 0
        for i=1,8 do
            c = c + (bits:sub(i,i) == '1' and 2^(8-i) or 0)
        end
        return string.char(c)
    end))
end

return b64
